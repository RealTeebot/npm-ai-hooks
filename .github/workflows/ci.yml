name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18, 20, 21, 22]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Use .nvmrc for Node.js 22
      if: matrix.node-version == 22
      run: |
        echo "Using Node.js version from .nvmrc: $(cat .nvmrc)"
        nvm install $(cat .nvmrc)
        nvm use $(cat .nvmrc)
        
    - name: Verify .npmrc configuration
      run: |
        echo "Checking .npmrc configuration:"
        cat .npmrc || echo "No .npmrc file found"
        echo "Node.js version: $(node --version)"
        echo "npm version: $(npm --version)"
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run lint
      
    - name: Run type checking
      run: npx tsc --noEmit
      
    - name: Run tests
      run: npm run test:ci
      env:
        AI_HOOK_OPENAI_KEY: ${{ secrets.AI_HOOK_OPENAI_KEY }}
        AI_HOOK_CLAUDE_KEY: ${{ secrets.AI_HOOK_CLAUDE_KEY }}
        AI_HOOK_GEMINI_KEY: ${{ secrets.AI_HOOK_GEMINI_KEY }}
        AI_HOOK_GROQ_KEY: ${{ secrets.AI_HOOK_GROQ_KEY }}
        AI_HOOK_OPENROUTER_KEY: ${{ secrets.AI_HOOK_OPENROUTER_KEY }}
        AI_HOOK_DEEPSEEK_KEY: ${{ secrets.AI_HOOK_DEEPSEEK_KEY }}
        AI_HOOK_XAI_KEY: ${{ secrets.AI_HOOK_XAI_KEY }}
        AI_HOOK_PERPLEXITY_KEY: ${{ secrets.AI_HOOK_PERPLEXITY_KEY }}
        AI_HOOK_MISTRAL_KEY: ${{ secrets.AI_HOOK_MISTRAL_KEY }}
        
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Use .nvmrc for consistent Node.js version
      run: |
        echo "Using Node.js version from .nvmrc: $(cat .nvmrc)"
        nvm install $(cat .nvmrc)
        nvm use $(cat .nvmrc)
        
    - name: Verify .npmrc configuration
      run: |
        echo "Checking .npmrc configuration:"
        cat .npmrc || echo "No .npmrc file found"
        echo "Node.js version: $(node --version)"
        echo "npm version: $(npm --version)"
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build package
      run: npm run build
      
    - name: Check build artifacts
      run: |
        ls -la dist/
        node -e "console.log(require('./dist/index.js'))"

  security:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Use .nvmrc for consistent Node.js version
      run: |
        echo "Using Node.js version from .nvmrc: $(cat .nvmrc)"
        nvm install $(cat .nvmrc)
        nvm use $(cat .nvmrc)
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level=moderate
      
    - name: Run Snyk security scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high

  publish:
    runs-on: ubuntu-latest
    needs: [test, build, security]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Use .nvmrc for consistent Node.js version
      run: |
        echo "Using Node.js version from .nvmrc: $(cat .nvmrc)"
        nvm install $(cat .nvmrc)
        nvm use $(cat .nvmrc)
        
    - name: Verify .npmrc configuration
      run: |
        echo "Checking .npmrc configuration:"
        cat .npmrc || echo "No .npmrc file found"
        echo "Node.js version: $(node --version)"
        echo "npm version: $(npm --version)"
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build package
      run: npm run build
      
    - name: Publish to npm
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
